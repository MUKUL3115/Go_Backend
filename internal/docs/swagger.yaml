basePath: /api/v1
definitions:
  dto.AuthResponse:
    properties:
      token:
        type: string
    type: object
  dto.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  dto.RegisterRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
host: localhost:8082
info:
  contact:
    email: support@example.com
    name: API Support
  description: This is the API documentation for the Go backend service.
  termsOfService: http://swagger.io/terms/
  title: Go Backend API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns a JWT token
      parameters:
      - description: Login credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.AuthResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login user
      tags:
      - Auth
  /register:
    post:
      consumes:
      - application/json
      description: Creates a new user with email and password
      parameters:
      - description: User registration data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - Auth
  /secure/profile:
    get:
      description: Returns basic profile info for the logged-in user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get user profile
      tags:
      - User
schemes:
- http
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and your JWT token (e.g. "Bearer
      eyJhbGci...")
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
